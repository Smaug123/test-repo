# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_XMLDOC_MODE: ''
  DOTNET_MULTILEVEL_LOOKUP: 0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # If generate-release-notes is true then you must pass `target-commitish`. This is apparently undocumented.
        generate: [false]
        tag-exists: [false]
        explicit-commitish: ["${{ github.event.pull_request.head.sha }}"]

    permissions:
      id-token: write
      attestations: write
      contents: write
      actions: write

    steps:
    - uses: actions/checkout@v4
    - name: Restore dependencies
      if: always()
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Pack
      run: dotnet pack
    - name: Tag
      id: tag
      env:
        TAG_EXISTS: ${{ matrix.tag-exists }}
      run: |
        TAG_NAME=$(basename $(mktemp -t tmp.XXXXXXXX))
        if [[ "$TAG_EXISTS" = "true" ]]; then
          git tag "$TAG_NAME" && git push --tags --force
        fi
        echo "tag=$TAG_NAME" >> "$GITHUB_OUTPUT"

    - name: GitHub release
      if: ${{ matrix.generate == false || matrix.explicit-commitish }}
      uses: Smaug123/gr-common-actions/github-release@af3982c7a9fb6f1b3ff926b0906d0bdf72b1da9d
      with:
        tag: ${{ steps.tag.outputs.tag }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        target-commitish: ${{ matrix.explicit-commitish }}
        generate-release-notes: ${{ matrix.generate }}

    - name: Create GitHub attestation
      uses: actions/attest-build-provenance@897ed5eab6ed058a474202017ada7f40bfa52940 # v1.0.0 
      with:
        subject-path: "Lib.fs"

    - name: Create bundle
      id: attestation-bundle
      env:
        GH_TOKEN: ${{ github.token }}
        ATT_OUTPUT: /tmp/attestation-Lib.fs.jsonl
      run: |
        gh attestation download Lib.fs -R "${{ github.repository }}"
        written_file="$(find . -maxdepth 1 -type f -name '*.jsonl' -print0)"
        num_files=$(echo -n "$written_file" | tr -d -c '\0' | wc -c | awk '{print $1}')
        if [ "$num_files" -ne "1" ]; then
          echo "Expected exactly one jsonl file! $written_file"
          exit 1
        fi
        written_file="$(printf '%s' "$written_file" | tr -d '\0')"
        mv "$written_file" "$ATT_OUTPUT"
        echo "outfile=$ATT_OUTPUT" >> "$GITHUB_OUTPUT"

    - name: Release attestation
      uses: Smaug123/gr-common-actions/github-release@af3982c7a9fb6f1b3ff926b0906d0bdf72b1da9d
      with:
        tag: ${{ steps.tag.outputs.tag }}
        target-commitish: ${{ matrix.explicit-commitish }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        generate-release-notes: false
        binary-contents: ${{ steps.attestation-bundle.outputs.outfile }}
